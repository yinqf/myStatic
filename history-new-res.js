let url = $request.url
let body = JSON.parse($response.body)
let headers = $request.headers

let curr_balance =269113.68;
let today_profit =-183.49;
let profit_list_7 = 
    [
-2445.36,
79.19,
-1917.04,
-2769.48,
-1229.92,
-179.28,
-183.49
    ]
let profit_list_30 = 
    [
-3128.97,
11842.08,
203.95,
356.28,
-2203.95,
388.48,
1278.63,
-2285.29,
-2126.09,
-659.94,
211.43,
-183.02,
-1489.88,
-412.74,
-2807.90,
11286.38,
67.53,
144.68,
25069.51,
162.76,
433.83,
23501.17,
-2034.54,
-2445.36,
79.19,
-1917.04,
-2769.48,
-1229.92,
-179.28,
-183.49
    ]
let profit_list_90 = 
    [
-4224.71,
-1450.94,
2.65,
12313.14,
-2633.72,
88.91,
-426.96,
12364.71,
-3252.55,
-2396.93,
-2227.65,
9058.65,
-1173.58,
187.31,
387.41,
2.69,
4.23,
-111.39,
3438.26,
-2494.23,
221.67,
-1198.22,
-833.77,
149.30,
485.48,
-3774.48,
-149.12,
-4178.61,
378.45,
2.13,
-4461.64,
-913.58,
28.26,
35636.93,
-1111.44,
-2385.10,
-231.10,
-562.65,
-2184.38,
-4273.12,
-368.55,
-4254.50,
5.23,
424.24,
12850.05,
9612.08,
-2258.40,
-532.46,
-6136.79,
-2192.44,
637.19,
1140.19,
-1060.26,
-333.09,
102.27,
1.99,
-749.04,
-210.81,
-7038.52,
-1432.98,
-3128.97,
11842.08,
203.95,
356.28,
-2203.95,
388.48,
1278.63,
-2285.29,
-2126.09,
-659.94,
211.43,
-183.02,
-1489.88,
-412.74,
-2807.90,
11286.38,
67.53,
144.68,
25069.51,
162.76,
433.83,
23501.17,
-2034.54,
-2445.36,
79.19,
-1917.04,
-2769.48,
-1229.92,
-179.28,
-183.49
    ]
let profit_list_365 = 
    [
-4098.56
-817.48
8.79,
-1084.41
1.56,
2.45,
2710.78
-154.87
394.72
-2761.53
-1803.51
-2478
2.01,
-774.79
-2085.47
-443.43
544.13
-389.6
4.23,
2254.56
5.23,
-105.82
-531.58
-228
-870.18
-618.08
-3685.76
-4878.26
28.16
25625.32
-4096.2
-813.12
-109.48,
-2220.46,
4.12,
-141.92,
5467.20,
-266.10,
831.08,
-3562.70,
-1775.59,
-1341.95,
2.35,
11727.65,
670.95,
-471.35,
1680.18,
-377.17,
-123.52,
-2010.98,
-100.91,
330.54,
2269.59,
1613.15,
-1572.18,
-608.73,
-4492.19,
-6934.09,
-387.63,
-2195.09,
-4462.16,
-867.86,
2.35,
11908.84,
3.65,
2.98,
-2205.14,
3.46,
349.09,
2240.94,
-1472.92,
-1953.89,
7.23,
645.14,
-1644.66,
-332.63,
14855.82,
-292.77,
4.56,
-1819.36,
22.37,
3.78,
-414.35,
-173.09,
703.86,
14488.35,
2953.12,
-3899.70,
23.84,
-1299.97,
-3278.85,
-653.98,
3.69,
-867.53,
3.47,
2.58,
-2168.62,
-123.90,
315.78,
2209.22,
-1442.81,
-1982.40,
6.24,
619.83,
-1668.38,
-354.74,
435.30,
-311.68,
2.12,
45803.65,
3.41,
3.05,
-425.26,
-182.40,
-696.14,
-494.46,
2948.61,
-3902.61,
22.53,
-1300.26,
-3276.96,
-650.50,
3.67,
1776.37,
2.65,
-113.54,
373.76,
-212.88,
-664.86,
15450.16,
1420.47,
-1073.56,
1.43,
-582.12,
536.76,
-377.08,
-1344.14,
-301.74,
5.26,
-1008.78,
2.47,
264.43,
-1815.67,
45190.52,
-1257.74,
-486.98,
-3593.75,
-5547.27,
-310.10,
-1756.07,
-3569.73,
-694.29,
-2120.24,
-244.82,
2.06,
-2296.17,
578.30,
24.65,
-1404.75,
-804.82,
11123.16,
-522.32,
91.61,
2.40,
-486.73,
21974.21,
-3938.57,
3.16,
-240.96,
490.44,
3.03,
593.78,
-1158.38,
51.39,
811.92,
-1612.39,
249.39,
-4041.25,
186.94,
-107.19,
-969.09,
-184.24,
103.01,
228.24,
3.08,
15280.89,
-2563.67,
-210.67,
-391.42,
-792.15,
-111.13,
-533.70,
-880.88,
-562.36,
-2253.34,
-245.45,
-1178.89,
69.01,
-2234.14,
-4484.27,
3.90,
2.14,
-139.24,
47.83,
117.79,
277.08,
-2247.78,
-1042.21,
186.63,
-906.85,
-968.10,
-1186.40,
-1223.26,
-1473.06,
1.26,
-2577.06,
-1141.98,
35.32,
17796.17,
-1389.29,
231.38,
-288.88,
78.31,
12230.48,
91.40,
85.68,
-5318.13,
2.45,
530.31,
-1062.57,
-2315.10,
323.01,
-665.58,
170.99,
-404.53,
368.69,
42192.16,
-1528.95,
160.84,
1.06,
11052.61,
-188.45,
96.20,
-4195.86,
-2632.06,
236.93,
462.64,
1.96,
323.80,
-2643.86,
98.53,
-1417.86,
73.29,
1.36,
-1389.39,
11579.37,
-3150.86,
2.96,
-1192.77,
-3392.35,
2.45,
475.02,
-926.70,
41.12,
24649.53,
-1289.91,
199.51,
-833.00,
149.55,
3.16,
-775.28,
-147.39,
82.41,
-2182.59,
4.16,
-4224.71,
-1450.94,
2.65,
12313.14,
-2633.72,
88.91,
-426.96,
12364.71,
-3252.55,
-2396.93,
-2227.65,
9058.65,
-1173.58,
187.31,
387.41,
2.69,
4.23,
-111.39,
3438.26,
-2494.23,
221.67,
-1198.22,
-833.77,
149.30,
485.48,
-3774.48,
-149.12,
-4178.61,
378.45,
2.13,
-4461.64,
-913.58,
28.26,
35636.93,
-1111.44,
-2385.10,
-231.10,
-562.65,
-2184.38,
-4273.12,
-368.55,
-4254.50,
5.23,
424.24,
12850.05,
9612.08,
-2258.40,
-532.46,
-6136.79,
-2192.44,
637.19,
1140.19,
-1060.26,
-333.09,
102.27,
1.99,
-749.04,
-210.81,
-7038.52,
-1432.98,
-3128.97,
11842.08,
203.95,
356.28,
-2203.95,
388.48,
1278.63,
-2285.29,
-2126.09,
-659.94,
211.43,
-183.02,
-1489.88,
-412.74,
-2807.90,
11286.38,
67.53,
144.68,
25069.51,
162.76,
433.83,
23501.17,
-2034.54,
-2445.36,
79.19,
-1917.04,
-2769.48,
-1229.92,
-179.28,
-183.49
    ]
function callApi(url, onSuccess, onError) {
    $httpClient.get(url, (error, response, data) => {
        if (!error && response.statusCode === 200) {
            onSuccess(data);
        } else {
            onError(error);
        }
    });
}


callApi("https://doc.ccore.cc/cache/get?id="+headers['x-trace-id'],function (res) {
    try {
        let requestBody = JSON.parse(res)
        if (url.indexOf('futures/v1/private/future/user-daily-profit/getNewUserProfitStatistic') !== -1) {
            let beginTime = requestBody.beginTime;
            let endTime = requestBody.endTime;
            let business = requestBody.business;
            let diff = (endTime - beginTime) / 60 / 60 / 24 / 1000 + 1;

            let data = body.data;
            if (business === 'USDT_FUTURES') {
                if (data.userProfitRets.length === 1) {
                    // 总盈利
                    data.totalProfit = today_profit > 0 ? today_profit : 0;
                    // 总亏损
                    data.totalLoss = today_profit > 0 ? 0 : today_profit;
                    // 净盈利/亏损
                    data.netProfit = today_profit;
                    // 盈利天数
                    data.profitDays = today_profit > 0 ? 1 : 0;
                    // 亏损天数
                    data.lossDays = today_profit > 0 ? 0 : 1;
                    // 未产生盈利亏损天数
                    data.fairDays = today_profit === 0 ? 1 : 0;
                    // 盈利天数占比
                    data.winDaysRate = today_profit > 0 ? 1.0 : 0;
                    // 平均盈利
                    data.averageProfit = today_profit > 0 ? today_profit : 0;
                    // 平均亏损
                    data.averageLoss = today_profit > 0 ? 0 : today_profit;

                    data.userProfitRets.forEach(item => {
                        item.balance = curr_balance;
                        item.profit = today_profit;
                    })
                }
                let mock_data = null;
                if (diff === 7) {
                    mock_data = profit_list_7;
                }
                if (diff === 30) {
                    mock_data = profit_list_30;
                }
                if (diff === 90) {
                   mock_data = profit_list_90;
               }
                if (diff === 365) {
                  mock_data = profit_list_365;
               }
                if (mock_data != null) {
                    let profitNum = 0;
                    let fairNum = 0;
                    let totalProfit = 0;
                    let totalLoss = 0;
                    for(let i= data.userProfitRets.length-1; i>=0; i--){
                        if(i === data.userProfitRets.length-1) {
                            data.userProfitRets[i].balance = curr_balance;
                        }else {
                            data.userProfitRets[i].balance = data.userProfitRets[i+1].balance + mock_data[i]
                        }
                        data.userProfitRets[i].profit = mock_data[i];
                        if(data.userProfitRets[i].profit > 0) {
                            totalProfit += data.userProfitRets[i].profit
                            profitNum++;
                        }else if(data.userProfitRets[i].profit === 0) {
                            fairNum++;
                        }else {
                            totalLoss += data.userProfitRets[i].profit
                        }
                    }
                    data.profitDays = profitNum;
                    //亏损天数
                    data.lossDays = data.userProfitRets.length - profitNum - fairNum;
                    //持平天数
                    data.fairDays = fairNum;
                    //胜率
                    data.winDaysRate = (profitNum * 100 / data.userProfitRets.length).toFixed(2);
                    //总盈利
                    data.totalProfit = totalProfit;
                    //总亏损
                    data.totalLoss = totalLoss * -1;
                    //净盈利/亏损
                    data.netProfit = data.totalProfit - data.totalLoss;
                }
            }

            $done({body: JSON.stringify(body)})
        } else {
            $done({})
        }
    } catch (e) {
        let data = body.data;
        data = {};
        $done({body: JSON.stringify(body)})
    }
},function (err) {
    $done({})
})
